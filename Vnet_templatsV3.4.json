{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "orgName": {
        "type": "string",
        "defaultValue": "txo",
        "minLength": 2,
        "maxLength": 5,
        "metadata": {
          "description": "A two-five character abbreviation of the organization/person using the vnet. "
        }
      },
      "envType": {
        "type": "string",
        "defaultValue": "test",
        "allowedValues": [
          "prod",
          "test",
          "dev",
          "stage",
          "edu"
        ],
        "metadata": {
          "description": "Type of environment for the Vnet: test, prod, dev, stage,edu"
        }
      },
      "orgIP": {
        "type": "int",
        "minValue": 0,
        "maxValue": 250,
        "metadata":{
            "description":"IP assigned for the client"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
    "vnetIp": "[concat('10.',variables('cusIp'),'.0.0/16')]",    
    "subnetIpPorch": "[concat('10.',variables('cusIp'),'.1.0/24')]",
    "subnetIpVpn": "[concat('10.',variables('cusIp'),'.2.0/24')]",
    "subnetIpIfweb":"[concat('10.',variables('cusIp'),'.3.0/24')]",
    "subnetIpIfapp": "[concat('10.',variables('cusIp'),'.4.0/24')]",
    "subnetIpNifweb": "[concat('10.',variables('cusIp'),'.33.0/24')]",
    "subnetIpNifapp": "[concat('10.',variables('cusIp'),'.34.0/24')]",
    "subnetIpNifdb": "[concat('10.',variables('cusIp'),'.35.0/24')]",
    "subnetIpCoop": "[concat('10.',variables('cusIp'),'.36.0/24')]",
    "subnetIPinfra": "[concat('10.',variables('cusIp'),'.37.0/24')]",
    "subnetIpSeim": "[concat('10.', variables('cusIp'),'.38.0/24')]",
    "subnetVpnTunnel": "[concat('10.250.',variables('cusIp'),'.0/24')]",
    "vnetName": "[concat('vnet','-', parameters('orgName'),'-',parameters('envType'))]",
    "cusIp": "[string(parameters('orgIP'))]",
    "subnetPrefix": "[concat('nw-',parameters('envType'))]",      
 //   "suffixName": {
 //       "type": "array",
 //       "Value": [
 //         "if-porch",
 //         "if-VPN",
 //         "if-web",
 //         "if-app",
 //         "nif-web",
 //         "nif-app",
 //         "nif-DB",
 //         "nif-coop",
 //         "nif-infrasec",
 //         "nif-seim"
 //       ]
 //     },
      "nsgPrefix": "[concat('nwnsg-',parameters('envType'))]",
      "nsgPorch": "[concat(variables('nsgPrefix'),'-if-porch')]",
      "nsgVpn": "[concat(variables('nsgPrefix'),'-if-VPN')]",
      "nsgIfweb": "[concat(variables('nsgPrefix'),'-if-web')]",
      "nsgIfapp": "[concat(variables('nsgPrefix'),'-if-app')]",
      "nsgnIfweb": "[concat(variables('nsgPrefix'),'-nif-web')]",
      "nsgNifapp": "[concat(variables('nsgPrefix'),'-nif-app')]",
      "nsgNifdb": "[concat(variables('nsgPrefix'),'-nif-DB')]",
      "nsgCoop": "[concat(variables('nsgPrefix'),'-nif-coop')]",
      "nsgInfra": "[concat(variables('nsgPrefix'),'-nif-infrasec')]",
      "nsgSeim": "[concat(variables('nsgPrefix'),'-nif-seim')]"
    },
    "resources": [
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgPorch')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {                
              "name": "AllowInternetInPorch",
              "properties": {
                "description": "Allow All traffic internet to porch",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "internet",
                "destinationAddressPrefix": "[variables('subnetIpPorch')]",
                "access": "Allow",
                "priority": 410,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgVpn')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [         
            
            {
              "name": "DenyPorchInVpn",
              "properties": {
                "description": "Deny all traffic from porch to vpn",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpVpn')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowVpnTunnInVpn",
              "properties": {
                "description": "Allow vpn tunnel traffic in vpn",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetVpnTunnel')]",
                "destinationAddressPrefix": "[variables('subnetIpVpn')]",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowSshInvpn",
              "properties": {
                "description": "Allow ssh traffic to vpn",
                "protocol": "Tcp",
                "sourcePortRange": "22",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpVpn')]",
                "access": "Allow",
                "priority": 180,
                "direction": "Inbound"
              }
            }, 
             
            {
              "name": "AllowRdpInvpn",
              "properties": {
                "description": "Allow rdp traffic to vpn",
                "protocol": "Tcp",
                "sourcePortRange": "3389",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpVpn')]",
                "access": "Allow",
                "priority": 190,
                "direction": "Inbound"
              }
            },            
            {
              "name": "AllowIcmpInvpn",
              "properties": {
                "description": "Allow Icmp to vpn from Vnet",
                "protocol": "Icmp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpVpn')]",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
              }
            },            
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny all other traffic in VPN Nw",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgIfweb')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "DenyPorchInIfweb",
              "properties": {
                "description": "Deny all from Porch to Ifweb",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpIfweb')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowIcmpIn",
              "properties": {
                "description": "Allow Icmp from Vnet",
                "protocol": "Icmp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpIfweb')]",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowHttpInIfweb",
              "properties": {
                "description": "Allow tcp port 80",
                "protocol": "Tcp",
                "sourcePortRange": "80",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "[variables('subnetIpIfweb')]",
                "access": "Allow",
                "priority": 410,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowHttpsInifweb",
              "properties": {
                "description": "Allow tcp port 443",
                "protocol": "Tcp",
                "sourcePortRange": "443",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "[variables('subnetIpIfweb')]",
                "access": "Allow",
                "priority": 420,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgIfapp')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
                        
            {
              "name": "AllowIcmpIn",
              "properties": {
                "description": "Allow Icmp from Vnet",
                "protocol": "Icmp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpIfapp')]",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
              }
            },
              {                
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('nsgnIfweb')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [            
            {
              "name": "DenyPorchInNifweb",
              "properties": {
                "description": "Deny porch traffic in nif-web",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpNifweb')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowTcpInNifweb",
              "properties": {
                "description": "Allow Tcp from vnet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",            
                "destinationAddressPrefix": "[variables('subnetIpNifweb')]",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound"
              }
            },
                        
            {
              "name": "AllowIcmpIn",
              "properties": {
                "description": "Allow Icmp from Vnet",
                "protocol": "Icmp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpNifweb')]",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgNifapp')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "DenyPorchInNifapp",
              "properties": {
                "description": "Deny all traffic from porch",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpNifapp')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowTcpInNifapp",
              "properties": {
                "description": "Allow all traffic from vnet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpNifapp')]",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound"
              }
            },                        
            {
              "name": "AllowIcmpIn",
              "properties": {
                "description": "Allow Icmp from Vnet",
                "protocol": "Icmp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpNifapp')]",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
              }
            }, 
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('nsgNifdb')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "DenyPorchInnifdb",
              "properties": {
                "description": "Deny all traffic from porch",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpNifdb')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowDbConnIn",
              "properties": {
                "description": "Allow Web to Connct to Database",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "1433",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpNifdb')]",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound"
              }
            },                        
            {
              "name": "AllowIcmpIn",
              "properties": {
                "description": "Allow Icmp from Vnet",
                "protocol": "Icmp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpNifdb')]",
                "access": "Allow",
                "priority": 400,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
  
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgCoop')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "DenyPorchInCoop",
              "properties": {
                "description": "Deny all traffic from porch",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpCoop')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowTcpInCoop",
              "properties": {
                "description": "Allow traffic from vnet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpCoop')]",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgInfra')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "DenyPorchInInfra",
              "properties": {
                "description": "Deny all traffic from porch",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIPinfra')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowNSInVnet",
              "properties": {
                "description": "Allow Tcp from vnet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIPinfra')]",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllport",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/NetworkSecurityGroups",
        "name": "[variables('nsgSeim')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [                        
            {
              "name": "DenyPorchInSeim",
              "properties": {
                "description": "Deny all traffic from porch",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('subnetIpPorch')]",
                "destinationAddressPrefix": "[variables('subnetIpSeim')]",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowTcpMonIn",
              "properties": {
                "description": "Allow traffic from vnet for monitoring/Log",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "[variables('vnetIp')]",
                "destinationAddressPrefix": "[variables('subnetIpSeim')]",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound"
              }
            },
            {
              "name": "DenyAllInPort",
              "properties": {
                "description": "Deny All port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-12-01",
        "name": "[variables('vnetName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgPorch'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgVpn'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgIfweb'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgIfapp'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgnIfweb'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgNifapp'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgNifdb'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgCoop'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgInfra'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgSeim'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('vnetIp')]"
            ]
          },
          "subnets": [
            {
              "name": "[concat(variables('subnetPrefix'),'-if-porch')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpPorch')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgPorch'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-if-VPN')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpVpn')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgVpn'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-if-web')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpIfweb')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgIfweb'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-if-app')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpIfapp')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgIfapp'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-nif-web')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpNifweb')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgnIfweb'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-nif-app')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpNifapp')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNifapp'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-nif-DB')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpNifdb')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNifdb'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-nif-coop')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpCoop')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgCoop'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-nif-infrasec')]",
              "properties": {
                "addressPrefix": "[variables('subnetIPinfra')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgInfra'))]"
                }
              }
            },
            {
              "name": "[concat(variables('subnetPrefix'),'-nif-seim')]",
              "properties": {
                "addressPrefix": "[variables('subnetIpSeim')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgSeim'))]"
                }
              }
            }
          ]
        }
      }
    ]
  }